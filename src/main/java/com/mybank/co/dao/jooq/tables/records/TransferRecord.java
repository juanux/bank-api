/*
 * This file is generated by jOOQ.
 */
package com.mybank.co.dao.jooq.tables.records;


import com.mybank.co.dao.jooq.tables.Transfer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferRecord extends UpdatableRecordImpl<TransferRecord> implements Record6<String, String, String, Double, String, String> {

    private static final long serialVersionUID = -366097116;

    /**
     * Setter for <code>TRANSFER.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>TRANSFER.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>TRANSFER.source_account_id</code>.
     */
    public void setSourceAccountId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>TRANSFER.source_account_id</code>.
     */
    public String getSourceAccountId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TRANSFER.target_account_id</code>.
     */
    public void setTargetAccountId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>TRANSFER.target_account_id</code>.
     */
    public String getTargetAccountId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>TRANSFER.amount</code>.
     */
    public void setAmount(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>TRANSFER.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>TRANSFER.date_time</code>.
     */
    public void setDateTime(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>TRANSFER.date_time</code>.
     */
    public String getDateTime() {
        return (String) get(4);
    }

    /**
     * Setter for <code>TRANSFER.status</code>.
     */
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>TRANSFER.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, Double, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, Double, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Transfer.TRANSFER.ID;
    }

    @Override
    public Field<String> field2() {
        return Transfer.TRANSFER.SOURCE_ACCOUNT_ID;
    }

    @Override
    public Field<String> field3() {
        return Transfer.TRANSFER.TARGET_ACCOUNT_ID;
    }

    @Override
    public Field<Double> field4() {
        return Transfer.TRANSFER.AMOUNT;
    }

    @Override
    public Field<String> field5() {
        return Transfer.TRANSFER.DATE_TIME;
    }

    @Override
    public Field<String> field6() {
        return Transfer.TRANSFER.STATUS;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSourceAccountId();
    }

    @Override
    public String component3() {
        return getTargetAccountId();
    }

    @Override
    public Double component4() {
        return getAmount();
    }

    @Override
    public String component5() {
        return getDateTime();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSourceAccountId();
    }

    @Override
    public String value3() {
        return getTargetAccountId();
    }

    @Override
    public Double value4() {
        return getAmount();
    }

    @Override
    public String value5() {
        return getDateTime();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public TransferRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TransferRecord value2(String value) {
        setSourceAccountId(value);
        return this;
    }

    @Override
    public TransferRecord value3(String value) {
        setTargetAccountId(value);
        return this;
    }

    @Override
    public TransferRecord value4(Double value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransferRecord value5(String value) {
        setDateTime(value);
        return this;
    }

    @Override
    public TransferRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public TransferRecord values(String value1, String value2, String value3, Double value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransferRecord
     */
    public TransferRecord() {
        super(Transfer.TRANSFER);
    }

    /**
     * Create a detached, initialised TransferRecord
     */
    public TransferRecord(String id, String sourceAccountId, String targetAccountId, Double amount, String dateTime, String status) {
        super(Transfer.TRANSFER);

        set(0, id);
        set(1, sourceAccountId);
        set(2, targetAccountId);
        set(3, amount);
        set(4, dateTime);
        set(5, status);
    }
}
