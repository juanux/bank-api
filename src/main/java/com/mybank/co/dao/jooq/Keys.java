/*
 * This file is generated by jOOQ.
 */
package com.mybank.co.dao.jooq;


import com.mybank.co.dao.jooq.tables.Account;
import com.mybank.co.dao.jooq.tables.FlywaySchemaHistory;
import com.mybank.co.dao.jooq.tables.Transfer;
import com.mybank.co.dao.jooq.tables.User;
import com.mybank.co.dao.jooq.tables.records.AccountRecord;
import com.mybank.co.dao.jooq.tables.records.FlywaySchemaHistoryRecord;
import com.mybank.co.dao.jooq.tables.records.TransferRecord;
import com.mybank.co.dao.jooq.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> PK_ACCOUNT = UniqueKeys0.PK_ACCOUNT;
    public static final UniqueKey<FlywaySchemaHistoryRecord> PK_FLYWAY_SCHEMA_HISTORY = UniqueKeys0.PK_FLYWAY_SCHEMA_HISTORY;
    public static final UniqueKey<TransferRecord> PK_TRANSFER = UniqueKeys0.PK_TRANSFER;
    public static final UniqueKey<UserRecord> PK_USER = UniqueKeys0.PK_USER;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, UserRecord> FK_ACCOUNT_USER_1 = ForeignKeys0.FK_ACCOUNT_USER_1;
    public static final ForeignKey<TransferRecord, AccountRecord> FK_TRANSFER_ACCOUNT_2 = ForeignKeys0.FK_TRANSFER_ACCOUNT_2;
    public static final ForeignKey<TransferRecord, AccountRecord> FK_TRANSFER_ACCOUNT_1 = ForeignKeys0.FK_TRANSFER_ACCOUNT_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> PK_ACCOUNT = Internal.createUniqueKey(Account.ACCOUNT, "pk_ACCOUNT", new TableField[] { Account.ACCOUNT.ID }, true);
        public static final UniqueKey<FlywaySchemaHistoryRecord> PK_FLYWAY_SCHEMA_HISTORY = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "pk_flyway_schema_history", new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
        public static final UniqueKey<TransferRecord> PK_TRANSFER = Internal.createUniqueKey(Transfer.TRANSFER, "pk_TRANSFER", new TableField[] { Transfer.TRANSFER.ID }, true);
        public static final UniqueKey<UserRecord> PK_USER = Internal.createUniqueKey(User.USER, "pk_USER", new TableField[] { User.USER.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountRecord, UserRecord> FK_ACCOUNT_USER_1 = Internal.createForeignKey(Keys.PK_USER, Account.ACCOUNT, "fk_ACCOUNT_USER_1", new TableField[] { Account.ACCOUNT.USER_ID }, true);
        public static final ForeignKey<TransferRecord, AccountRecord> FK_TRANSFER_ACCOUNT_2 = Internal.createForeignKey(Keys.PK_ACCOUNT, Transfer.TRANSFER, "fk_TRANSFER_ACCOUNT_2", new TableField[] { Transfer.TRANSFER.SOURCE_ACCOUNT_ID }, true);
        public static final ForeignKey<TransferRecord, AccountRecord> FK_TRANSFER_ACCOUNT_1 = Internal.createForeignKey(Keys.PK_ACCOUNT, Transfer.TRANSFER, "fk_TRANSFER_ACCOUNT_1", new TableField[] { Transfer.TRANSFER.TARGET_ACCOUNT_ID }, true);
    }
}
